import cv2

def cartoonify_image(image_path):
    # Read the image
    image = cv2.imread(image_path)

    # Convert to grayscale
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Apply bilateral filter to smooth the image while preserving edges
    smooth_image = cv2.bilateralFilter(image, d=9, sigmaColor=75, sigmaSpace=75)

    # Perform edge detection using adaptive thresholding
    edge_image = cv2.adaptiveThreshold(gray_image, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 9, 2)

    # Combine the smoothed image with the edges to get a cartoon effect
    cartoon_image = cv2.bitwise_and(smooth_image, smooth_image, mask=edge_image)

    return cartoon_image

if __name__ == "__main__":
    input_image_path = "path/to/your/input/image.jpg"
    output_image_path = "path/to/save/cartoonified_image.jpg"

    cartoon_image = cartoonify_image(input_image_path)

    cv2.imwrite(output_image_path, cartoon_image)
    cv2.imshow("Cartoonified Image", cartoon_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
